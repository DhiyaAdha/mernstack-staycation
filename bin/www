#!/usr/bin/env node

/**
 * Modul dependensi.
 */

var app = require("../app");
var debug = require("debug")("server-staycation:server");
var http = require("http");

/**
 * Mendapatkan port dari environment dan menyimpannya di Express.
 */

var port = normalizePort(process.env.PORT || "3000");
app.set("port", port);

/**
 * Membuat server HTTP.
 */

var server = http.createServer(app);

/**
 * Mendengarkan di port yang disediakan, pada semua interface jaringan.
 */

server.listen(port, () => console.log(`Listening on port ${port}`));
server.on("error", onError);
server.on("listening", onListening);

/**
 * Menormalkan port menjadi nomor, string, atau false.
 */

function normalizePort(val) {
  var port = parseInt(val, 10);

  if (isNaN(port)) {
    // named pipe
    return val;
  }

  if (port >= 0) {
    // nomor port
    return port;
  }

  return false;
}

/**
 * Event listener untuk event "error" pada server HTTP.
 */

function onError(error) {
  if (error.syscall !== "listen") {
    throw error;
  }

  var bind = typeof port === "string" ? "Pipe " + port : "Port " + port;

  // menangani error listen spesifik dengan pesan yang lebih jelas
  switch (error.code) {
    case "EACCES":
      console.error(bind + " membutuhkan hak akses lebih tinggi");
      process.exit(1);
      break;
    case "EADDRINUSE":
      console.error(bind + " sudah digunakan");
      process.exit(1);
      break;
    default:
      throw error;
  }
}

/**
 * Event listener untuk event "listening" pada server HTTP.
 */

function onListening() {
  var addr = server.address();
  var bind = typeof addr === "string" ? "pipe " + addr : "port " + addr.port;
  debug("Listening on " + bind);
}
